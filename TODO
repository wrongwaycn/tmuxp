TODO
====

0.1 milestone
-------------

- `pep8`_, `pep257`_ for tests. (ongoing)
- tmuxp freeze:

  - offer to save ``session_name`` as default file if filename
  doesn't already exist in config dir.

  - Remove -zsh command, python, etc if just in shell.
- ``shell_command_before`` for `teamocil`_.
- if no ``window_name`` in config, option ``automatic_rename: on`` by 
  default and test.
- example of doctest/usage example of creating a new tmux session from
  object
- example of accessing a current tmux session from object
- example of loading a tmux session from a :py:obj:``dict``. example of
  the schema.
- remove duplicated code in :mod:`tmuxp.cli`.
- Determine the workflow for ``$ tmuxp load filename`` for sure. Document
  it.
- Handle case where switching client via ``$ tmuxp load`` or
  ``$ tmuxp attach-session`` into another socket may cause an error.


Done
''''

- Add help docs to CLI commands and options.
- tmuxp -L and -S autocomplete to correct server ``socket-name`` and
  ``socket-path``.
- Get `sphinx-argparse`_ in good enough shape for docs.
- rename functions
  - ``util.version()`` to ``util.has_required_tmux_version()``. (done)
  - ``config.check_consistency()`` to ``config.validate_schema()``. (done)
- python 2.6 support
- Remove doc for ``run_tests.py`` visual test runner. Just have
  instruction for running test builder package.


Future
------

  - Automatically grab ``[-L socket-name]`` and ``[-S socket-path]``
    from where tmuxp was ran. ``os.environ.get('$TMUX')``.
  - Automatically grab current sesession, window, session from where 
    script is ran. ``$ tmuxp kill-window`` should kill current window.
    
    Or, As an alternative, create a mapping that pipes commands right into
    tmux like a layer cake.

.. _pep257: http://www.python.org/dev/peps/pep-0257/
.. _pep8: http://www.python.org/dev/peps/pep-0008/
.. _teamocil: https://github.com/remiprev/teamocil
.. _sphinx-argparse: https://github.com/tony/sphinx-argparse


.. todo:: vim: set filetype=rst:
